import $ from './extend.js'
import layer from 'layer'
let pagination = {
  default: {
    simple: true, // 简单分页，包含： 上一页、下一页、跳转
    container: 'page', // 分页容器
    count: 0, // 总条数
    curr: 1, // 当前页
    num: 20, // 每页展示条数
    jump: null, // 跳转
    totalPage: 1, // 总页数
    startPage: 1, // 展示起始页
    endPage: 1, // 展示结束页
    pageShowNum: 5, // 展示可选页面个数
    pageNav: { // 分页导航
      id: '',
      className: 'pagination',
      style: ''
    },
    homePage: {
      show: true, // 是否显示
      text: '首页', // 展示内容，可为html
      index: 1, // 索引
      disabled: false, // 是否可操作
      style: ''
    },
    prevPage: {
      show: true, // 是否显示
      text: '上一页', // 展示内容，可为html
      index: 1, // 索引
      disabled: false, // 是否可操作
      style: ''
    },
    nextPage: {
      show: true, // 是否显示
      text: '下一页', // 展示内容，可为html
      index: 1, // 索引
      disabled: false, // 是否可操作
      style: ''
    },
    lastPage: {
      show: true, // 是否显示
      text: '尾页', // 展示内容，可为html
      index: 1, // 索引
      disabled: false, // 是否可操作
      style: ''
    },
    jumpPage: {
      show: false, // 是否显示
      text: '跳转', // 展示内容，可为html
      index: 1, // 索引
      disabled: false, // 是否可操作
      style: ''
    }
  },
  init: function (ops) {
    $.extend(this.default, ops)
    console.log(this.default)
    // 初始化起始、结束展示页码数据
    this.default.totalPage = Math.ceil(this.default.count / this.default.num) || 1 // 总页数
    let _middlePage = Math.ceil(this.default.pageShowNum / 2) - 1 // 中间展示页码距第一个页面间隔
    let _currPage = this.default.curr
    // 总页码（totalPage） 小于 默认展示可选页码(pageShowNum)
    if (this.default.totalPage <= this.default.pageShowNum) {
      this.default.startPage = 1
      this.default.endPage = this.default.totalPage
    } else if (this.default.totalPage > this.default.pageShowNum) {
      // 总页码（totalPage） 大于 默认展示可选页码(pageShowNum)
      // 展示距离 当前页(_currPage) 最近的 可选页码
      this.default.startPage = _currPage - _middlePage > 0 ? _currPage - _middlePage : 1
      this.default.endPage = this.default.startPage + this.default.pageShowNum - 1 <= this.default.totalPage ? this.default.startPage + this.default.pageShowNum - 1 : this.default.totalPage
    }
    if (this.default.curr <= 1) {
      this.default.homePage.disabled = true
      this.default.prevPage.disabled = true
    }
    if (this.default.curr >= this.default.totalPage) {
      this.default.nextPage.disabled = true
      this.default.lastPage.disabled = true
    }
    // 重置容器
    document.getElementById(this.default.container).innerHTML = ''
    this.createHtml()
  },
  createHtml: function () {
    // 创建分页导航容器
    let _paginationObj = document.createElement('ul')
    _paginationObj.id = this.default.pageNav.id
    _paginationObj.className = this.default.pageNav.className
    _paginationObj.style = this.default.pageNav.style
    // 总页数
    let _total = document.createElement('li')
    let totalA = document.createElement('a')
    _total.className = 'paginate_button first disabled'
    totalA.innerHTML = '共' + this.default.totalPage + ' 页'
    totalA.href = 'javascript:'
    _total.appendChild(totalA)
    _paginationObj.appendChild(_total)
    // 首页
    if (this.default.homePage.show) {
      let objLi = document.createElement('li')
      let objA = document.createElement('a')
      objLi.className = 'paginate_button' + (this.default.homePage.disabled ? ' disabled' : '')
      objA.innerHTML = this.default.homePage.text
      objA.href = 'javascript:'
      if (!this.default.homePage.disabled) {
        objLi.addEventListener('click', function () {
          this.default.jump(1)
        })
      }
      objLi.appendChild(objA)
      _paginationObj.appendChild(objLi)
    }
    // 上一页
    if (this.default.prevPage.show) {
      let objLi = document.createElement('li')
      let objA = document.createElement('a')
      objLi.className = 'paginate_button' + (this.default.prevPage.disabled ? ' disabled' : '')
      objA.innerHTML = this.default.prevPage.text
      objA.href = 'javascript:'
      if (!this.default.prevPage.disabled) {
        objLi.addEventListener('click', function () {
          this.default.jump(this.default.curr - 1)
        })
      }
      objLi.appendChild(objA)
      _paginationObj.appendChild(objLi)
    }
    // 展示可选页码
    for (let i = this.default.startPage; i <= this.default.endPage; i++) {
      let objLi = document.createElement('li')
      let objA = document.createElement('a')
      objLi.className = 'paginate_button' + (i === this.default.curr ? ' active' : '')
      objA.innerHTML = i
      objA.href = 'javascript:'
      if (i !== this.default.curr) {
        (function (i) {
          objLi.addEventListener('click', function () {
            this.default.jump(i)
          })
        })(i)
      }
      objLi.appendChild(objA)
      _paginationObj.appendChild(objLi)
    }
    // 下一页
    if (this.default.nextPage.show) {
      let objLi = document.createElement('li')
      let objA = document.createElement('a')
      objLi.className = 'paginate_button' + (this.default.nextPage.disabled ? ' disabled' : '')
      objA.innerHTML = this.default.nextPage.text
      objA.href = 'javascript:'
      if (!this.default.nextPage.disabled) {
        objLi.addEventListener('click', function () {
          this.default.jump(parseInt(this.default.curr) + 1)
        })
      }
      objLi.appendChild(objA)
      _paginationObj.appendChild(objLi)
    }
    // 尾页
    if (this.default.lastPage.show) {
      let objLi = document.createElement('li')
      let objA = document.createElement('a')
      objLi.className = 'paginate_button' + (this.default.lastPage.disabled ? ' disabled' : '')
      objA.innerHTML = this.default.lastPage.text
      objA.href = 'javascript:'
      if (!this.default.lastPage.disabled) {
        objLi.addEventListener('click', function () {
          this.default.jump(this.default.totalPage)
        })
      }
      objLi.appendChild(objA)
      _paginationObj.appendChild(objLi)
    }
    // 跳转
    if (this.default.jumpPage.show) {
      // '跳转'文本
      let objLi = document.createElement('li')
      let objA = document.createElement('span')
      objLi.className = 'paginate_button'
      objA.innerHTML = this.default.jumpPage.text
      objLi.appendChild(objA)
      _paginationObj.appendChild(objLi)

      // 跳转页码输入框
      let objLi1 = document.createElement('li')
      let objA1 = document.createElement('input')
      objLi1.className = 'paginate_button'
      objA1.innerHTML = this.default.jumpPage.text
      objA1.type = 'number'
      objA1.className = 'pull-left'
      objA1.style = 'width:50px'
      objA1.addEventListener('keydown', function (e) {
        if (e.keyCode === 13) {
          let _val = objA1.value
          if (_val <= 0) {
            layer.alert('输入页码必须为正整数')
          } else if (_val > this.default.totalPage) {
            layer.alert('输入页码不能大于总页数')
          } else {
            this.default.jump(_val)
          }
        }
      })
      objLi1.appendChild(objA1)
      _paginationObj.appendChild(objLi1)
      // 跳转按钮
      let objLi2 = document.createElement('li')
      let objA2 = document.createElement('a')
      objLi2.className = 'paginate_button'
      objA2.innerHTML = 'GO'
      objA2.href = 'javascript:'
      objA2.addEventListener('click', function (e) {
        let _val = objA1.value
        if (_val <= 0) {
          layer.alert('输入页码必须为正整数')
        } else if (_val > this.default.totalPage) {
          layer.alert('输入页码不能大于总页数')
        } else {
          this.default.jump(_val)
        }
      })
      objLi2.appendChild(objA2)
      _paginationObj.appendChild(objLi2)
    }
    console.log(_paginationObj)
    document.getElementById(this.default.container).appendChild(_paginationObj)
    // $(this.default.container).html(_paginationObj)
  }
}
export default pagination
